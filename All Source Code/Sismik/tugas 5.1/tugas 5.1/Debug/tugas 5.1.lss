
tugas 5.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004e2  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000004e2  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000004e2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000511  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f31  00000000  00000000  00000571  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d0  00000000  00000000  000014a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004e3  00000000  00000000  00001b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000174  00000000  00000000  00002058  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d5  00000000  00000000  000021cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000794  00000000  00000000  000023a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002b35  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000041e  0000041e  000004d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002b88  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.LCD_Command 00000056  000002d6  000002d6  0000038a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LCD_Char 00000056  0000032c  0000032c  000003e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LCD_Init 0000003c  00000382  00000382  00000436  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LCD_String 0000002c  000003be  000003be  00000472  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_Clear 0000001a  000003ea  000003ea  0000049e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    000000b0  000000ce  000000ce  00000182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .progmemx.data 00000019  000000b4  000000b4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 21 .text.__vector_1 000000ac  0000017e  0000017e  00000232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_2 000000ac  0000022a  0000022a  000002de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .data.shift   00000002  0080006c  0000042c  000004e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data.str     0000000a  00800062  00000422  000004d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 25 .text.libgcc  0000001a  00000404  00000404  000004b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__vector_1>
   8:	0c 94 15 01 	jmp	0x22a	; 0x22a <__vector_2>
   c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  10:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  14:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  18:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  1c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  20:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  24:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  28:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  2c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  30:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  34:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  38:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  3c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  40:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  44:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  48:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  4c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
  50:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 62       	ori	r16, 0x20	; 32
  58:	80 00       	.word	0x0080	; ????
  5a:	62 00       	.word	0x0062	; ????
  5c:	6e 00       	.word	0x006e	; ????
  5e:	04 22       	and	r0, r20

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d4 e0       	ldi	r29, 0x04	; 4
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	e4 e5       	ldi	r30, 0x54	; 84
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	17 c0       	rjmp	.+46     	; 0xa2 <__do_clear_bss+0x8>
  74:	b5 91       	lpm	r27, Z+
  76:	a5 91       	lpm	r26, Z+
  78:	35 91       	lpm	r19, Z+
  7a:	25 91       	lpm	r18, Z+
  7c:	05 91       	lpm	r16, Z+
  7e:	07 fd       	sbrc	r16, 7
  80:	0c c0       	rjmp	.+24     	; 0x9a <__do_clear_bss>
  82:	95 91       	lpm	r25, Z+
  84:	85 91       	lpm	r24, Z+
  86:	ef 01       	movw	r28, r30
  88:	f9 2f       	mov	r31, r25
  8a:	e8 2f       	mov	r30, r24
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0x20>
  96:	fe 01       	movw	r30, r28
  98:	04 c0       	rjmp	.+8      	; 0xa2 <__do_clear_bss+0x8>

0000009a <__do_clear_bss>:
  9a:	1d 92       	st	X+, r1
  9c:	a2 17       	cp	r26, r18
  9e:	b3 07       	cpc	r27, r19
  a0:	e1 f7       	brne	.-8      	; 0x9a <__do_clear_bss>
  a2:	e0 36       	cpi	r30, 0x60	; 96
  a4:	f4 07       	cpc	r31, r20
  a6:	31 f7       	brne	.-52     	; 0x74 <__do_copy_data+0x8>
  a8:	0e 94 67 00 	call	0xce	; 0xce <main>
  ac:	0c 94 58 00 	jmp	0xb0	; 0xb0 <_exit>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>

Disassembly of section .text:

0000041e <__bad_interrupt>:
 41e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.LCD_Command:

000002d6 <LCD_Command>:
	if(row == 0 && pos < 16)
	LCD_Command((pos & 0x0F) | 0x80);
	else  if(row == 1 && pos < 16)
	LCD_Command((pos & 0x0F) | 0xC0);
	LCD_String(str);
}
 2d6:	98 b3       	in	r25, 0x18	; 24
 2d8:	9f 70       	andi	r25, 0x0F	; 15
 2da:	28 2f       	mov	r18, r24
 2dc:	20 7f       	andi	r18, 0xF0	; 240
 2de:	92 2b       	or	r25, r18
 2e0:	98 bb       	out	0x18, r25	; 24
 2e2:	98 b3       	in	r25, 0x18	; 24
 2e4:	9e 7f       	andi	r25, 0xFE	; 254
 2e6:	98 bb       	out	0x18, r25	; 24
 2e8:	98 b3       	in	r25, 0x18	; 24
 2ea:	92 60       	ori	r25, 0x02	; 2
 2ec:	98 bb       	out	0x18, r25	; 24
 2ee:	00 00       	nop
 2f0:	98 b3       	in	r25, 0x18	; 24
 2f2:	9d 7f       	andi	r25, 0xFD	; 253
 2f4:	98 bb       	out	0x18, r25	; 24
 2f6:	32 e4       	ldi	r19, 0x42	; 66
 2f8:	3a 95       	dec	r19
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <LCD_Command+0x22>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <LCD_Command+0x28>
 2fe:	28 b3       	in	r18, 0x18	; 24
 300:	30 e1       	ldi	r19, 0x10	; 16
 302:	83 9f       	mul	r24, r19
 304:	c0 01       	movw	r24, r0
 306:	11 24       	eor	r1, r1
 308:	92 2f       	mov	r25, r18
 30a:	9f 70       	andi	r25, 0x0F	; 15
 30c:	89 2b       	or	r24, r25
 30e:	88 bb       	out	0x18, r24	; 24
 310:	88 b3       	in	r24, 0x18	; 24
 312:	82 60       	ori	r24, 0x02	; 2
 314:	88 bb       	out	0x18, r24	; 24
 316:	00 00       	nop
 318:	88 b3       	in	r24, 0x18	; 24
 31a:	8d 7f       	andi	r24, 0xFD	; 253
 31c:	88 bb       	out	0x18, r24	; 24
 31e:	83 ef       	ldi	r24, 0xF3	; 243
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <LCD_Command+0x4c>
 326:	00 c0       	rjmp	.+0      	; 0x328 <LCD_Command+0x52>
 328:	00 00       	nop
 32a:	08 95       	ret

Disassembly of section .text.LCD_Char:

0000032c <LCD_Char>:
 32c:	98 b3       	in	r25, 0x18	; 24
 32e:	9f 70       	andi	r25, 0x0F	; 15
 330:	28 2f       	mov	r18, r24
 332:	20 7f       	andi	r18, 0xF0	; 240
 334:	92 2b       	or	r25, r18
 336:	98 bb       	out	0x18, r25	; 24
 338:	98 b3       	in	r25, 0x18	; 24
 33a:	91 60       	ori	r25, 0x01	; 1
 33c:	98 bb       	out	0x18, r25	; 24
 33e:	98 b3       	in	r25, 0x18	; 24
 340:	92 60       	ori	r25, 0x02	; 2
 342:	98 bb       	out	0x18, r25	; 24
 344:	00 00       	nop
 346:	98 b3       	in	r25, 0x18	; 24
 348:	9d 7f       	andi	r25, 0xFD	; 253
 34a:	98 bb       	out	0x18, r25	; 24
 34c:	32 e4       	ldi	r19, 0x42	; 66
 34e:	3a 95       	dec	r19
 350:	f1 f7       	brne	.-4      	; 0x34e <LCD_Char+0x22>
 352:	00 c0       	rjmp	.+0      	; 0x354 <LCD_Char+0x28>
 354:	28 b3       	in	r18, 0x18	; 24
 356:	30 e1       	ldi	r19, 0x10	; 16
 358:	83 9f       	mul	r24, r19
 35a:	c0 01       	movw	r24, r0
 35c:	11 24       	eor	r1, r1
 35e:	92 2f       	mov	r25, r18
 360:	9f 70       	andi	r25, 0x0F	; 15
 362:	89 2b       	or	r24, r25
 364:	88 bb       	out	0x18, r24	; 24
 366:	88 b3       	in	r24, 0x18	; 24
 368:	82 60       	ori	r24, 0x02	; 2
 36a:	88 bb       	out	0x18, r24	; 24
 36c:	00 00       	nop
 36e:	88 b3       	in	r24, 0x18	; 24
 370:	8d 7f       	andi	r24, 0xFD	; 253
 372:	88 bb       	out	0x18, r24	; 24
 374:	83 ef       	ldi	r24, 0xF3	; 243
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <LCD_Char+0x4c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <LCD_Char+0x52>
 37e:	00 00       	nop
 380:	08 95       	ret

Disassembly of section .text.LCD_Init:

00000382 <LCD_Init>:
 382:	8f ef       	ldi	r24, 0xFF	; 255
 384:	87 bb       	out	0x17, r24	; 23
 386:	87 e8       	ldi	r24, 0x87	; 135
 388:	93 e1       	ldi	r25, 0x13	; 19
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <LCD_Init+0x8>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <LCD_Init+0xe>
 390:	00 00       	nop
 392:	82 e0       	ldi	r24, 0x02	; 2
 394:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 398:	88 e2       	ldi	r24, 0x28	; 40
 39a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 39e:	8c e0       	ldi	r24, 0x0C	; 12
 3a0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 3a4:	86 e0       	ldi	r24, 0x06	; 6
 3a6:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 3b0:	83 ef       	ldi	r24, 0xF3	; 243
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <LCD_Init+0x32>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <LCD_Init+0x38>
 3ba:	00 00       	nop
 3bc:	08 95       	ret

Disassembly of section .text.LCD_String:

000003be <LCD_String>:
 3be:	0f 93       	push	r16
 3c0:	1f 93       	push	r17
 3c2:	cf 93       	push	r28
 3c4:	df 93       	push	r29
 3c6:	8c 01       	movw	r16, r24
 3c8:	c0 e0       	ldi	r28, 0x00	; 0
 3ca:	d0 e0       	ldi	r29, 0x00	; 0
 3cc:	03 c0       	rjmp	.+6      	; 0x3d4 <LCD_String+0x16>
 3ce:	0e 94 96 01 	call	0x32c	; 0x32c <LCD_Char>
 3d2:	21 96       	adiw	r28, 0x01	; 1
 3d4:	f8 01       	movw	r30, r16
 3d6:	ec 0f       	add	r30, r28
 3d8:	fd 1f       	adc	r31, r29
 3da:	80 81       	ld	r24, Z
 3dc:	81 11       	cpse	r24, r1
 3de:	f7 cf       	rjmp	.-18     	; 0x3ce <LCD_String+0x10>
 3e0:	df 91       	pop	r29
 3e2:	cf 91       	pop	r28
 3e4:	1f 91       	pop	r17
 3e6:	0f 91       	pop	r16
 3e8:	08 95       	ret

Disassembly of section .text.LCD_Clear:

000003ea <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command(0x01);
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3f0:	83 ef       	ldi	r24, 0xF3	; 243
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <LCD_Clear+0xa>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <LCD_Clear+0x10>
 3fa:	00 00       	nop
	_delay_ms(2);
	LCD_Command(0x80);
 3fc:	80 e8       	ldi	r24, 0x80	; 128
 3fe:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 402:	08 95       	ret

Disassembly of section .text.main:

000000ce <main>:
	if(row == 0 && pos < 16)
	LCD_Command((pos & 0x0F) | 0x80);
	else  if(row == 1 && pos < 16)
	LCD_Command((pos & 0x0F) | 0xC0);
	LCD_String(str);
}
  ce:	11 ba       	out	0x11, r1	; 17
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	82 bb       	out	0x12, r24	; 18
  d4:	80 ec       	ldi	r24, 0xC0	; 192
  d6:	8b bf       	out	0x3b, r24	; 59
  d8:	8f e0       	ldi	r24, 0x0F	; 15
  da:	85 bf       	out	0x35, r24	; 53
  dc:	78 94       	sei
  de:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_Init>
  e2:	82 e6       	ldi	r24, 0x62	; 98
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 df 01 	call	0x3be	; 0x3be <LCD_String>
  ea:	2f e7       	ldi	r18, 0x7F	; 127
  ec:	8a e1       	ldi	r24, 0x1A	; 26
  ee:	96 e0       	ldi	r25, 0x06	; 6
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x22>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x2c>
  fa:	00 00       	nop
  fc:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <_edata+0x1>
 100:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 104:	c0 e0       	ldi	r28, 0x00	; 0
 106:	d0 e0       	ldi	r29, 0x00	; 0
 108:	10 c0       	rjmp	.+32     	; 0x12a <main+0x5c>
 10a:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <_edata>
 10e:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <_edata+0x1>
 112:	23 2b       	or	r18, r19
 114:	89 f4       	brne	.+34     	; 0x138 <main+0x6a>
 116:	8c e1       	ldi	r24, 0x1C	; 28
 118:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 11c:	87 ea       	ldi	r24, 0xA7	; 167
 11e:	91 e6       	ldi	r25, 0x61	; 97
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x52>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x58>
 126:	00 00       	nop
 128:	21 96       	adiw	r28, 0x01	; 1
 12a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <shift>
 12e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <shift+0x1>
 132:	c8 17       	cp	r28, r24
 134:	d9 07       	cpc	r29, r25
 136:	4c f3       	brlt	.-46     	; 0x10a <main+0x3c>
 138:	81 31       	cpi	r24, 0x11	; 17
 13a:	91 05       	cpc	r25, r1
 13c:	2c f4       	brge	.+10     	; 0x148 <main+0x7a>
 13e:	40 96       	adiw	r24, 0x10	; 16
 140:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <shift+0x1>
 144:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <shift>
 148:	c0 e0       	ldi	r28, 0x00	; 0
 14a:	d0 e0       	ldi	r29, 0x00	; 0
 14c:	10 c0       	rjmp	.+32     	; 0x16e <main+0xa0>
 14e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 152:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
 156:	89 2b       	or	r24, r25
 158:	89 f6       	brne	.-94     	; 0xfc <main+0x2e>
 15a:	88 e1       	ldi	r24, 0x18	; 24
 15c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Command>
 160:	87 ea       	ldi	r24, 0xA7	; 167
 162:	91 e6       	ldi	r25, 0x61	; 97
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0x96>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0x9c>
 16a:	00 00       	nop
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <shift>
 172:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <shift+0x1>
 176:	c8 17       	cp	r28, r24
 178:	d9 07       	cpc	r29, r25
 17a:	4c f3       	brlt	.-46     	; 0x14e <main+0x80>
 17c:	bf cf       	rjmp	.-130    	; 0xfc <main+0x2e>

Disassembly of section .text.__vector_1:

0000017e <__vector_1>:
 17e:	1f 92       	push	r1
 180:	0f 92       	push	r0
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	0f 92       	push	r0
 186:	11 24       	eor	r1, r1
 188:	2f 93       	push	r18
 18a:	3f 93       	push	r19
 18c:	4f 93       	push	r20
 18e:	5f 93       	push	r21
 190:	6f 93       	push	r22
 192:	7f 93       	push	r23
 194:	8f 93       	push	r24
 196:	9f 93       	push	r25
 198:	af 93       	push	r26
 19a:	bf 93       	push	r27
 19c:	ef 93       	push	r30
 19e:	ff 93       	push	r31
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	cd b7       	in	r28, 0x3d	; 61
 1a6:	de b7       	in	r29, 0x3e	; 62
 1a8:	2c 97       	sbiw	r28, 0x0c	; 12
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	cd bf       	out	0x3d, r28	; 61
 1ae:	24 eb       	ldi	r18, 0xB4	; 180
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	8c e0       	ldi	r24, 0x0C	; 12
 1b6:	f9 01       	movw	r30, r18
 1b8:	de 01       	movw	r26, r28
 1ba:	11 96       	adiw	r26, 0x01	; 1
 1bc:	74 2f       	mov	r23, r20
 1be:	0e 94 02 02 	call	0x404	; 0x404 <__movmemx_qi>
 1c2:	8b e0       	ldi	r24, 0x0B	; 11
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <shift+0x1>
 1ca:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <shift>
 1ce:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
 1d2:	ce 01       	movw	r24, r28
 1d4:	01 96       	adiw	r24, 0x01	; 1
 1d6:	0e 94 df 01 	call	0x3be	; 0x3be <LCD_String>
 1da:	2f e7       	ldi	r18, 0x7F	; 127
 1dc:	8a e1       	ldi	r24, 0x1A	; 26
 1de:	96 e0       	ldi	r25, 0x06	; 6
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <__vector_1+0x62>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <__vector_1+0x6c>
 1ea:	00 00       	nop
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
 1f4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 1f8:	2c 96       	adiw	r28, 0x0c	; 12
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	f8 94       	cli
 1fe:	de bf       	out	0x3e, r29	; 62
 200:	0f be       	out	0x3f, r0	; 63
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	ff 91       	pop	r31
 20a:	ef 91       	pop	r30
 20c:	bf 91       	pop	r27
 20e:	af 91       	pop	r26
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	7f 91       	pop	r23
 216:	6f 91       	pop	r22
 218:	5f 91       	pop	r21
 21a:	4f 91       	pop	r20
 21c:	3f 91       	pop	r19
 21e:	2f 91       	pop	r18
 220:	0f 90       	pop	r0
 222:	0f be       	out	0x3f, r0	; 63
 224:	0f 90       	pop	r0
 226:	1f 90       	pop	r1
 228:	18 95       	reti

Disassembly of section .text.__vector_2:

0000022a <__vector_2>:
 22a:	1f 92       	push	r1
 22c:	0f 92       	push	r0
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	0f 92       	push	r0
 232:	11 24       	eor	r1, r1
 234:	2f 93       	push	r18
 236:	3f 93       	push	r19
 238:	4f 93       	push	r20
 23a:	5f 93       	push	r21
 23c:	6f 93       	push	r22
 23e:	7f 93       	push	r23
 240:	8f 93       	push	r24
 242:	9f 93       	push	r25
 244:	af 93       	push	r26
 246:	bf 93       	push	r27
 248:	ef 93       	push	r30
 24a:	ff 93       	push	r31
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	2d 97       	sbiw	r28, 0x0d	; 13
 256:	de bf       	out	0x3e, r29	; 62
 258:	cd bf       	out	0x3d, r28	; 61
 25a:	20 ec       	ldi	r18, 0xC0	; 192
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	8d e0       	ldi	r24, 0x0D	; 13
 262:	f9 01       	movw	r30, r18
 264:	de 01       	movw	r26, r28
 266:	11 96       	adiw	r26, 0x01	; 1
 268:	74 2f       	mov	r23, r20
 26a:	0e 94 02 02 	call	0x404	; 0x404 <__movmemx_qi>
 26e:	8c e0       	ldi	r24, 0x0C	; 12
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <shift+0x1>
 276:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <shift>
 27a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
 27e:	ce 01       	movw	r24, r28
 280:	01 96       	adiw	r24, 0x01	; 1
 282:	0e 94 df 01 	call	0x3be	; 0x3be <LCD_String>
 286:	2f e7       	ldi	r18, 0x7F	; 127
 288:	8a e1       	ldi	r24, 0x1A	; 26
 28a:	96 e0       	ldi	r25, 0x06	; 6
 28c:	21 50       	subi	r18, 0x01	; 1
 28e:	80 40       	sbci	r24, 0x00	; 0
 290:	90 40       	sbci	r25, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <__vector_2+0x62>
 294:	00 c0       	rjmp	.+0      	; 0x296 <__vector_2+0x6c>
 296:	00 00       	nop
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
 2a0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 2a4:	2d 96       	adiw	r28, 0x0d	; 13
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	f8 94       	cli
 2aa:	de bf       	out	0x3e, r29	; 62
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	cd bf       	out	0x3d, r28	; 61
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	ff 91       	pop	r31
 2b6:	ef 91       	pop	r30
 2b8:	bf 91       	pop	r27
 2ba:	af 91       	pop	r26
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	7f 91       	pop	r23
 2c2:	6f 91       	pop	r22
 2c4:	5f 91       	pop	r21
 2c6:	4f 91       	pop	r20
 2c8:	3f 91       	pop	r19
 2ca:	2f 91       	pop	r18
 2cc:	0f 90       	pop	r0
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	0f 90       	pop	r0
 2d2:	1f 90       	pop	r1
 2d4:	18 95       	reti

Disassembly of section .text.libgcc:

00000404 <__movmemx_qi>:
 404:	99 27       	eor	r25, r25

00000406 <__movmemx_hi>:
 406:	77 fd       	sbrc	r23, 7
 408:	05 c0       	rjmp	.+10     	; 0x414 <__movmemx_hi+0xe>
 40a:	05 90       	lpm	r0, Z+
 40c:	0d 92       	st	X+, r0
 40e:	01 97       	sbiw	r24, 0x01	; 1
 410:	e1 f7       	brne	.-8      	; 0x40a <__movmemx_hi+0x4>
 412:	08 95       	ret
 414:	01 90       	ld	r0, Z+
 416:	0d 92       	st	X+, r0
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	e1 f7       	brne	.-8      	; 0x414 <__movmemx_hi+0xe>
 41c:	08 95       	ret
